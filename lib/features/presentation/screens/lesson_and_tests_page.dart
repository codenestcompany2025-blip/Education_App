import 'package:flutter/material.dart';
import 'package:eduaction_app/core/constants/colors.dart';
import 'package:eduaction_app/features/presentation/widgets/custom_textfield.dart';
import '../widgets/custom_unit_info_card.dart';
import '../widgets/lesson_card.dart';
import '../widgets/test_card.dart';

class LessonAndTestsPage extends StatefulWidget {
  final String subjectName;
  final String unitName;

  const LessonAndTestsPage({
    super.key,
    required this.subjectName,
    required this.unitName,
  });

  @override
  State<LessonAndTestsPage> createState() => _LessonAndTestsPageState();
}

class _LessonAndTestsPageState extends State<LessonAndTestsPage> {
  bool showLessons = true;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 0,
        automaticallyImplyLeading: true,
        centerTitle: true,
        title: customTextField(
          text: 'Ù…Ø§Ø¯Ø© ${widget.subjectName} / ${widget.unitName}',
          size: 16,
          color: AppColors.blueColor,
        ),
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.symmetric(horizontal: 14, vertical: 10),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const UnitInfoCard(
              lessonsCount: 5,
              testsCount: 5,
              duration: 'ØºÙŠØ± Ù…Ø­Ø¯Ø¯Ø© Ø§Ù„Ù…Ø¯Ø©',
            ),
            const SizedBox(height: 12),
            Container(
              height: 45,
              color: Colors.white,
              child: Row(
                children: [
                  _buildTabButton("Ø§Ù„Ø¯Ø±ÙˆØ³", true),
                  const SizedBox(width: 25),
                  _buildTabButton("Ø§Ù„Ø§Ø®ØªØ¨Ø§Ø±Ø§Øª", false),
                ],
              ),
            ),
            const SizedBox(height: 10),
            Row(
              children: [
                // ðŸ”¹ Ø§Ù„Ø®Ø· Ø§Ù„Ø£ÙˆÙ„
                const Expanded(
                  child: Divider(
                    color: Colors.black,
                    thickness: 1,
                    endIndent: 10,
                  ),
                ),

                // ðŸ”¹ Ø§Ù„Ø¹Ù†ÙˆØ§Ù† Ù…Ø¹ Ø§Ù„Ø£ÙŠÙ‚ÙˆÙ†Ø©
                Row(
                  children: [
                    const Icon(Icons.edit_note, size: 30, color: Colors.black),
                    const SizedBox(width: 6),
                    customTextField(
                      text: 'Ø¯Ø±ÙˆØ³ Ø§Ù„ÙˆØ­Ø¯Ø© Ø§Ù„Ø§ÙˆÙ„Ù‰',
                      size: 15,
                      color: Colors.black,
                    ),

                  ],
                ),
                const Expanded(
                  child: Divider(color: Colors.black, thickness: 1, indent: 10),
                ),
              ],
            ),
            const SizedBox(height: 10),
            if (showLessons) _buildLessonsList() else _buildTestsList(),
          ],
        ),
      ),
    );
  }

  Widget _buildTabButton(String text, bool isLessons) {
    final bool isActive =
        (showLessons && isLessons) || (!showLessons && !isLessons);

    return GestureDetector(
      onTap: () {
        setState(() {
          showLessons = isLessons;
        });
      },
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          customTextField(
            text: text,
            color: isActive ? AppColors.blueColor : Colors.grey,
            size: 15,
          ),
          const SizedBox(height: 5),
          AnimatedContainer(
            duration: const Duration(milliseconds: 250),
            height: 2,
            width: 40,
            color: isActive ? AppColors.blueColor : Colors.transparent,
          ),
        ],
      ),
    );
  }

  Widget _buildLessonsList() {
    return Column(
      children: const [
        LessonCard(
          title: 'Ø§Ù„Ø¯Ø±Ø³ Ø§Ù„Ø£ÙˆÙ„: Ø§Ø´ØªÙ‚Ø§Ù‚ ÙˆØªÙƒØ§Ù…Ù„',
          unlocked: true,
          completed: true,
        ),
        LessonCard(
          title: 'Ø§Ù„Ø¯Ø±Ø³ Ø§Ù„Ø«Ø§Ù†ÙŠ: Ø§Ù„Ø§Ø´ØªÙ‚Ø§Ù‚',
          unlocked: true,
          completed: false,
        ),
        LessonCard(title: 'Ø§Ù„Ø¯Ø±Ø³ Ø§Ù„Ø«Ø§Ù„Ø«: Ø§Ù„Ù…Ø¹Ø§Ø¯Ù„Ø§Øª', unlocked: false),
        LessonCard(title: 'Ø§Ù„Ø¯Ø±Ø³ Ø§Ù„Ø±Ø§Ø¨Ø¹: Ø§Ù„ØªÙƒØ§Ù…Ù„', unlocked: false),
      ],
    );
  }

  // ðŸ”¹ Ù…Ø­ØªÙˆÙ‰ ØªØ¨ÙˆÙŠØ¨ Ø§Ù„Ø§Ø®ØªØ¨Ø§Ø±Ø§Øª
  Widget _buildTestsList() {
    return Column(
      children: const [
        TestCard(title: 'Ø§Ù„Ø§Ø®ØªØ¨Ø§Ø± Ø§Ù„Ø£ÙˆÙ„', unlocked: true, passed: true),
        TestCard(title: 'Ø§Ù„Ø§Ø®ØªØ¨Ø§Ø± Ø§Ù„Ø«Ø§Ù†ÙŠ', unlocked: true, passed: false),
        TestCard(title: 'Ø§Ù„Ø§Ø®ØªØ¨Ø§Ø± Ø§Ù„Ø«Ø§Ù„Ø«', unlocked: false),
        TestCard(title: 'Ø§Ù„Ø§Ø®ØªØ¨Ø§Ø± Ø§Ù„Ø±Ø§Ø¨Ø¹', unlocked: false),
      ],
    );
  }
}
